{"version":3,"sources":["../../src/bin/index.js"],"names":["name","require","process","cwd","__dirname","ls","promise","p","stdio","stdout","startsWith","p2","s2","stderr","e2","console","log","p3","s3","e3","p4","s4","e4"],"mappings":";;AAAA;;AACA;;AACA;;;;AACA,MAAM;AAAEA;AAAF,IAAWC,QAAQ,mBAAQC,QAAQC,GAAR,EAAR,EAAuB,gBAAvB,CAAR,CAAjB;;AAEA,MAAMA,MAAM,mBAAQC,SAAR,EAAmB,OAAnB,CAAZ;;AAEA,MAAMC,KAAK,YAAY;AACrB,QAAM;AAAEC,aAASC;AAAX,MAAiB,2BAAM,KAAN,EAAa,CAClC,OADkC,EAElC,IAFkC,CAAb,EAGpB;AACDC,WAAO;AADN,GAHoB,CAAvB;AAMA,QAAMD,CAAN;AACD,CARD;;AAUC,CAAC,YAAY;AACZ,QAAMF,IAAN;AACA,QAAM;AAAEC;AAAF,MAAc,2BAAM,KAAN,EAAa,CAC/B,OAD+B,EAE/B,KAF+B,EAG/B,aAH+B,CAAb,CAApB;AAKA,QAAM;AAAEG;AAAF,MAAa,MAAMH,OAAzB;AACA,kBAAGG,OAAOC,UAAP,CAAkB,eAAlB,CAAH,EAAuC,wBAAvC;AAEA,QAAM;AAAEJ,aAASK;AAAX,MAAkB,2BAAM,KAAN,EAAa,CACnC,OADmC,EAEnC,IAFmC,EAGnC,KAHmC,EAInCX,IAJmC,CAAb,EAKrB;AACDG;AADC,GALqB,CAAxB;AAQA,QAAM;AAAEM,YAAQG,EAAV;AAAcC,YAAQC;AAAtB,MAA6B,MAAMH,EAAzC;AACAI,UAAQC,GAAR,CAAYJ,EAAZ,EAAgBE,EAAhB;AAEA,QAAM;AAAER,aAASW;AAAX,MAAkB,2BAAM,KAAN,EAAa,CACnC,OADmC,EAEnC,KAFmC,EAGnC,KAHmC,EAInCjB,IAJmC,CAAb,EAKrB;AACDG;AADC,GALqB,CAAxB;AAQA,QAAM;AAAEM,YAAQS,EAAV;AAAcL,YAAQM;AAAtB,MAA6B,MAAMF,EAAzC;AACAF,UAAQC,GAAR,CAAYE,EAAZ,EAAgBC,EAAhB;AAEA,QAAM;AAAEb,aAASc;AAAX,MAAkB,2BAAM,KAAN,EAAa,CACnC,OADmC,EAEnC,IAFmC,EAGnC,aAHmC,EAInCpB,IAJmC,CAAb,CAAxB;AAMA,QAAM;AAAES,YAAQY,EAAV;AAAcR,YAAQS;AAAtB,MAA6B,MAAMF,EAAzC;AACAL,UAAQC,GAAR,CAAYK,EAAZ,EAAgBC,EAAhB;AAEA,QAAMjB,IAAN;AACD,CA1CA","sourcesContent":["import { ok } from 'assert'\nimport spawn from 'spawncommand'\nimport { resolve } from 'path'\nconst { name } = require(resolve(process.cwd(), './package.json'))\n\nconst cwd = resolve(__dirname, '../..')\n\nconst ls = async () => {\n  const { promise: p } = spawn('npm', [\n    'owner',\n    'ls',\n  ], {\n    stdio: 'inherit',\n  })\n  await p\n}\n\n;(async () => {\n  await ls()\n  const { promise } = spawn('npm', [\n    'owner',\n    'add',\n    'artdecocode',\n  ])\n  const { stdout } = await promise\n  ok(stdout.startsWith('+ artdecocode'), 'Expected to add a user')\n\n  const { promise: p2 } = spawn('npm', [\n    'owner',\n    'rm',\n    'zvr',\n    name,\n  ], {\n    cwd,\n  })\n  const { stdout: s2, stderr: e2 } = await p2\n  console.log(s2, e2)\n\n  const { promise: p3 } = spawn('npm', [\n    'owner',\n    'add',\n    'zvr',\n    name,\n  ], {\n    cwd,\n  })\n  const { stdout: s3, stderr: e3 } = await p3\n  console.log(s3, e3)\n\n  const { promise: p4 } = spawn('npm', [\n    'owner',\n    'rm',\n    'artdecocode',\n    name,\n  ])\n  const { stdout: s4, stderr: e4 } = await p4\n  console.log(s4, e4)\n\n  await ls()\n})()\n"],"file":"index.js"}